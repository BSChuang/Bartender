{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ben\\\\Documents\\\\GitHub\\\\Bartender\\\\react-app\\\\src\\\\ChooseDrinkScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField, Grid, Typography, Button, Box, FormControl, FormLabel, RadioGroup, Radio, FormControlLabel } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport drinksDict from './drinks.json';\nimport ingredients from './ingredients.json';\nimport GetDrinkScreen, { GetCustomDrinkScreen } from './GetDrinkScreen';\nexport default function ChooseDrinkScreen() {\n  _s();\n\n  const [drink, setDrink] = useState(null);\n  const [search, setSearch] = useState('');\n\n  const handleSearchChange = e => {\n    setSearch(e.target.value);\n  };\n\n  const [filterIngredients, setFilterIngredients] = useState([]);\n\n  const handleIngredientChange = (e, value) => {\n    setFilterIngredients(value);\n  };\n\n  const [option, setOption] = useState('every');\n\n  const handleOptionChange = (e, value) => {\n    setOption(value);\n  };\n\n  if (drink === 'Custom') {\n    return /*#__PURE__*/_jsxDEV(GetCustomDrinkScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  } else if (drink != null) {\n    return /*#__PURE__*/_jsxDEV(GetDrinkScreen, {\n      drink: capitalize(drink),\n      qr: `g${drink}`,\n      allowFavorite: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100vw'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-basic\",\n              label: \"Search\",\n              onChange: handleSearchChange,\n              style: {\n                width: '95%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              multiple: true,\n              id: \"tags-standard\",\n              options: ingredients.slice(1),\n              getOptionLabel: option => capitalize(option),\n              defaultValue: [],\n              onChange: handleIngredientChange,\n              style: {\n                width: '95%'\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                variant: \"standard\",\n                label: \"Ingredients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              component: \"fieldset\",\n              children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                row: true,\n                \"aria-label\": \"position\",\n                name: \"position\",\n                defaultValue: \"every\",\n                style: {\n                  display: 'flex'\n                },\n                onChange: handleOptionChange,\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"every\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 46\n                  }, this),\n                  label: \"Every\",\n                  labelPlacement: \"start\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"some\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 46\n                  }, this),\n                  label: \"Some\",\n                  labelPlacement: \"start\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: search == '' && filterIngredients.length == 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            style: {\n              padding: '0.2%',\n              height: '25vh'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => setDrink('Custom'),\n              style: {\n                width: '100%',\n                height: '100%'\n              },\n              children: \"Custom Drink\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), Object.keys(drinksDict).sort().map(drink => /*#__PURE__*/_jsxDEV(DrinkButton, {\n            drinkName: drink,\n            setDrink: setDrink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 74\n          }, this))]\n        }, void 0, true) : Object.keys(drinksDict).sort().filter(drink => filterDrink(drink, search, filterIngredients, option)).map(drink => /*#__PURE__*/_jsxDEV(DrinkButton, {\n          drinkName: drink,\n          setDrink: setDrink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 140\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(ChooseDrinkScreen, \"HPnmZTTtz3wlAf6oZ+emtnWUmF0=\");\n\n_c = ChooseDrinkScreen;\n\nfunction filterDrink(drink, search, ingredients, option) {\n  console.log(ingredients);\n  var hasSearch = drink.includes(search.toLowerCase());\n  var hasIngredient = true;\n\n  if (ingredients.length != 0) {\n    if (option == 'only') {\n      hasIngredient = ingredients.every(ingredient => Object.keys(drinksDict[drink]).includes(ingredient));\n    } else {\n      hasIngredient = ingredients.some(ingredient => Object.keys(drinksDict[drink]).includes(ingredient));\n    }\n  }\n\n  return hasSearch && hasIngredient;\n}\n\nfunction capitalize(text) {\n  return text.toLowerCase().split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n}\n\nfunction DrinkButton({\n  drinkName,\n  setDrink\n}) {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      padding: '0.2%',\n      height: '25vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => setDrink(drinkName),\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: drinkName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          fontStyle: \"italic\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: Object.keys(drinksDict[drinkName]).map(drink => capitalize(drink)).join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 12\n  }, this);\n}\n\n_c2 = DrinkButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChooseDrinkScreen\");\n$RefreshReg$(_c2, \"DrinkButton\");","map":{"version":3,"sources":["C:/Users/ben/Documents/GitHub/Bartender/react-app/src/ChooseDrinkScreen.js"],"names":["React","useState","TextField","Grid","Typography","Button","Box","FormControl","FormLabel","RadioGroup","Radio","FormControlLabel","Autocomplete","drinksDict","ingredients","GetDrinkScreen","GetCustomDrinkScreen","ChooseDrinkScreen","drink","setDrink","search","setSearch","handleSearchChange","e","target","value","filterIngredients","setFilterIngredients","handleIngredientChange","option","setOption","handleOptionChange","capitalize","width","display","justifyContent","alignItems","slice","params","length","padding","height","Object","keys","sort","map","filter","filterDrink","console","log","hasSearch","includes","toLowerCase","hasIngredient","every","ingredient","some","text","split","s","charAt","toUpperCase","substring","join","DrinkButton","drinkName"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,UAA1B,EAAsCC,MAAtC,EAA8CC,GAA9C,EAAmDC,WAAnD,EAAgEC,SAAhE,EAA2EC,UAA3E,EAAuFC,KAAvF,EAA8FC,gBAA9F,QAAsH,mBAAtH;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,cAAP,IAAyBC,oBAAzB,QAAqD,kBAArD;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMqB,kBAAkB,GAAIC,CAAD,IAAO;AAC9BF,IAAAA,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACH,GAFD;;AAIA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4C1B,QAAQ,CAAC,EAAD,CAA1D;;AACA,QAAM2B,sBAAsB,GAAG,CAACL,CAAD,EAAIE,KAAJ,KAAc;AACzCE,IAAAA,oBAAoB,CAACF,KAAD,CAApB;AACH,GAFD;;AAIA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsB7B,QAAQ,CAAC,OAAD,CAApC;;AACA,QAAM8B,kBAAkB,GAAG,CAACR,CAAD,EAAIE,KAAJ,KAAc;AACrCK,IAAAA,SAAS,CAACL,KAAD,CAAT;AACH,GAFD;;AAIA,MAAIP,KAAK,KAAK,QAAd,EAAwB;AACpB,wBAAO,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO,IAAIA,KAAK,IAAI,IAAb,EAAmB;AACtB,wBAAO,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEc,UAAU,CAACd,KAAD,CAAjC;AAA0C,MAAA,EAAE,EAAG,IAAGA,KAAM,EAAxD;AAA2D,MAAA,aAAa,EAAE;AAA1E;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFM,MAGF;AACD,wBAAO;AAAK,MAAA,KAAK,EAAE;AAAEe,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA,8BACH,QAAC,IAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,SAAS,EAAC,KAFd;AAAA,gCAGI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI;AAAK,YAAA,KAAK,EAAE;AAAEC,cAAAA,OAAO,EAAE,MAAX;AAAmBC,cAAAA,cAAc,EAAE,QAAnC;AAA6CC,cAAAA,UAAU,EAAE;AAAzD,aAAZ;AAAA,mCACI,QAAC,SAAD;AAAW,cAAA,EAAE,EAAC,gBAAd;AAA+B,cAAA,KAAK,EAAC,QAArC;AAA8C,cAAA,QAAQ,EAAEd,kBAAxD;AACI,cAAA,KAAK,EAAE;AAAEW,gBAAAA,KAAK,EAAE;AAAT;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHJ,eASI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI;AAAK,YAAA,KAAK,EAAE;AAAEC,cAAAA,OAAO,EAAE,MAAX;AAAmBC,cAAAA,cAAc,EAAE,QAAnC;AAA6CC,cAAAA,UAAU,EAAE;AAAzD,aAAZ;AAAA,mCACI,QAAC,YAAD;AACI,cAAA,QAAQ,MADZ;AAEI,cAAA,EAAE,EAAC,eAFP;AAGI,cAAA,OAAO,EAAEtB,WAAW,CAACuB,KAAZ,CAAkB,CAAlB,CAHb;AAII,cAAA,cAAc,EAAGR,MAAD,IAAYG,UAAU,CAACH,MAAD,CAJ1C;AAKI,cAAA,YAAY,EAAE,EALlB;AAMI,cAAA,QAAQ,EAAED,sBANd;AAOI,cAAA,KAAK,EAAE;AAAEK,gBAAAA,KAAK,EAAE;AAAT,eAPX;AAQI,cAAA,WAAW,EAAGK,MAAD,iBACT,QAAC,SAAD,OACQA,MADR;AAEI,gBAAA,OAAO,EAAC,UAFZ;AAGI,gBAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA;AATR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATJ,eA8BI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI;AAAK,YAAA,KAAK,EAAE;AAAEJ,cAAAA,OAAO,EAAE,MAAX;AAAmBC,cAAAA,cAAc,EAAE,QAAnC;AAA6CC,cAAAA,UAAU,EAAE;AAAzD,aAAZ;AAAA,mCACI,QAAC,WAAD;AAAa,cAAA,SAAS,EAAC,UAAvB;AAAA,qCACI,QAAC,UAAD;AAAY,gBAAA,GAAG,MAAf;AAAgB,8BAAW,UAA3B;AAAsC,gBAAA,IAAI,EAAC,UAA3C;AAAsD,gBAAA,YAAY,EAAC,OAAnE;AAA2E,gBAAA,KAAK,EAAE;AAAEF,kBAAAA,OAAO,EAAE;AAAX,iBAAlF;AAAuG,gBAAA,QAAQ,EAAEH,kBAAjH;AAAA,wCACI,QAAC,gBAAD;AACI,kBAAA,KAAK,EAAC,OADV;AAEI,kBAAA,OAAO,eAAE,QAAC,KAAD;AAAO,oBAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,0BAFb;AAGI,kBAAA,KAAK,EAAC,OAHV;AAII,kBAAA,cAAc,EAAC;AAJnB;AAAA;AAAA;AAAA;AAAA,wBADJ,eAOI,QAAC,gBAAD;AACI,kBAAA,KAAK,EAAC,MADV;AAEI,kBAAA,OAAO,eAAE,QAAC,KAAD;AAAO,oBAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,0BAFb;AAGI,kBAAA,KAAK,EAAC,MAHV;AAII,kBAAA,cAAc,EAAC;AAJnB;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAqDH,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA,kBAEQX,MAAM,IAAI,EAAV,IAAgBM,iBAAiB,CAACa,MAAlB,IAA4B,CAA5C,gBACI;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAkB,YAAA,KAAK,EAAE;AAAEC,cAAAA,OAAO,EAAE,MAAX;AAAmBC,cAAAA,MAAM,EAAE;AAA3B,aAAzB;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,KAAK,EAAC,SAAlC;AACI,cAAA,OAAO,EAAE,MAAMtB,QAAQ,CAAC,QAAD,CAD3B;AAEI,cAAA,KAAK,EAAE;AAAEc,gBAAAA,KAAK,EAAE,MAAT;AAAiBQ,gBAAAA,MAAM,EAAE;AAAzB,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,EAQKC,MAAM,CAACC,IAAP,CAAY9B,UAAZ,EAAwB+B,IAAxB,GAA+BC,GAA/B,CAAmC3B,KAAK,iBAAI,QAAC,WAAD;AAAa,YAAA,SAAS,EAAEA,KAAxB;AAA+B,YAAA,QAAQ,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAA5C,CARL;AAAA,wBADJ,GAYIuB,MAAM,CAACC,IAAP,CAAY9B,UAAZ,EAAwB+B,IAAxB,GAA+BE,MAA/B,CAAsC5B,KAAK,IAAI6B,WAAW,CAAC7B,KAAD,EAAQE,MAAR,EAAgBM,iBAAhB,EAAmCG,MAAnC,CAA1D,EAAsGgB,GAAtG,CAA0G3B,KAAK,iBAAI,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEA,KAAxB;AAA+B,UAAA,QAAQ,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAAnH;AAdZ;AAAA;AAAA;AAAA;AAAA,cArDG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAuEH;AACJ;;GAhGuBF,iB;;KAAAA,iB;;AAkGxB,SAAS8B,WAAT,CAAqB7B,KAArB,EAA4BE,MAA5B,EAAoCN,WAApC,EAAiDe,MAAjD,EAAyD;AACrDmB,EAAAA,OAAO,CAACC,GAAR,CAAYnC,WAAZ;AACA,MAAIoC,SAAS,GAAGhC,KAAK,CAACiC,QAAN,CAAe/B,MAAM,CAACgC,WAAP,EAAf,CAAhB;AACA,MAAIC,aAAa,GAAG,IAApB;;AACA,MAAIvC,WAAW,CAACyB,MAAZ,IAAsB,CAA1B,EAA6B;AACzB,QAAIV,MAAM,IAAI,MAAd,EAAsB;AAClBwB,MAAAA,aAAa,GAAGvC,WAAW,CAACwC,KAAZ,CAAkBC,UAAU,IAAIb,MAAM,CAACC,IAAP,CAAY9B,UAAU,CAACK,KAAD,CAAtB,EAA+BiC,QAA/B,CAAwCI,UAAxC,CAAhC,CAAhB;AACH,KAFD,MAEO;AACHF,MAAAA,aAAa,GAAGvC,WAAW,CAAC0C,IAAZ,CAAiBD,UAAU,IAAIb,MAAM,CAACC,IAAP,CAAY9B,UAAU,CAACK,KAAD,CAAtB,EAA+BiC,QAA/B,CAAwCI,UAAxC,CAA/B,CAAhB;AACH;AACJ;;AACD,SAAOL,SAAS,IAAIG,aAApB;AACH;;AAED,SAASrB,UAAT,CAAoByB,IAApB,EAA0B;AACtB,SAAOA,IAAI,CAACL,WAAL,GACFM,KADE,CACI,GADJ,EAEFb,GAFE,CAEGc,CAAD,IAAOA,CAAC,CAACC,MAAF,CAAS,CAAT,EAAYC,WAAZ,KAA4BF,CAAC,CAACG,SAAF,CAAY,CAAZ,CAFrC,EAGFC,IAHE,CAGG,GAHH,CAAP;AAIH;;AAED,SAASC,WAAT,CAAqB;AAAEC,EAAAA,SAAF;AAAa9C,EAAAA;AAAb,CAArB,EAA8C;AAC1C,sBAAO,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,KAAK,EAAE;AAAEqB,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,MAAM,EAAE;AAA3B,KAAzB;AAAA,2BACH,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AACI,MAAA,OAAO,EAAE,MAAMtB,QAAQ,CAAC8C,SAAD,CAD3B;AAEI,MAAA,KAAK,EAAE;AAAEhC,QAAAA,KAAK,EAAE,MAAT;AAAiBQ,QAAAA,MAAM,EAAE;AAAzB,OAFX;AAAA,6BAGI;AAAA,gCACI;AAAA,oBACKwB;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,SAApB;AAA8B,YAAA,KAAK,EAAE;AAAE/B,cAAAA,OAAO,EAAE,MAAX;AAAmBC,cAAAA,cAAc,EAAE,QAAnC;AAA6CC,cAAAA,UAAU,EAAE;AAAzD,aAArC;AAAA,sBAEQM,MAAM,CAACC,IAAP,CAAY9B,UAAU,CAACoD,SAAD,CAAtB,EAAmCpB,GAAnC,CAAuC3B,KAAK,IAAIc,UAAU,CAACd,KAAD,CAA1D,EAAmE6C,IAAnE,CAAwE,IAAxE;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAmBH;;MApBQC,W","sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Grid, Typography, Button, Box, FormControl, FormLabel, RadioGroup, Radio, FormControlLabel } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport drinksDict from './drinks.json'\r\nimport ingredients from './ingredients.json'\r\nimport GetDrinkScreen, { GetCustomDrinkScreen } from './GetDrinkScreen'\r\n\r\nexport default function ChooseDrinkScreen() {\r\n    const [drink, setDrink] = useState(null);\r\n\r\n    const [search, setSearch] = useState('')\r\n    const handleSearchChange = (e) => {\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    const [filterIngredients, setFilterIngredients] = useState([])\r\n    const handleIngredientChange = (e, value) => {\r\n        setFilterIngredients(value)\r\n    }\r\n\r\n    const [option, setOption] = useState('every')\r\n    const handleOptionChange = (e, value) => {\r\n        setOption(value)\r\n    }\r\n\r\n    if (drink === 'Custom') {\r\n        return <GetCustomDrinkScreen />\r\n    } else if (drink != null) {\r\n        return <GetDrinkScreen drink={capitalize(drink)} qr={`g${drink}`} allowFavorite={true} />\r\n    }\r\n    else {\r\n        return <div style={{ width: '100vw' }}>\r\n            <Grid\r\n                container\r\n                direction=\"row\">\r\n                <Grid item xs={12}>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <TextField id=\"standard-basic\" label=\"Search\" onChange={handleSearchChange}\r\n                            style={{ width: '95%' }} />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Autocomplete\r\n                            multiple\r\n                            id=\"tags-standard\"\r\n                            options={ingredients.slice(1)}\r\n                            getOptionLabel={(option) => capitalize(option)}\r\n                            defaultValue={[]}\r\n                            onChange={handleIngredientChange}\r\n                            style={{ width: '95%' }}\r\n                            renderInput={(params) => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    variant=\"standard\"\r\n                                    label=\"Ingredients\"\r\n\r\n                                />\r\n                            )}\r\n                        />\r\n                    </ div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <FormControl component=\"fieldset\">\r\n                            <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"every\" style={{ display: 'flex' }} onChange={handleOptionChange}>\r\n                                <FormControlLabel\r\n                                    value=\"every\"\r\n                                    control={<Radio color=\"primary\" />}\r\n                                    label=\"Every\"\r\n                                    labelPlacement=\"start\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    value=\"some\"\r\n                                    control={<Radio color=\"primary\" />}\r\n                                    label=\"Some\"\r\n                                    labelPlacement=\"start\"\r\n                                />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                {\r\n                    search == '' && filterIngredients.length == 0 ?\r\n                        <>\r\n                            <Grid item xs={6} style={{ padding: '0.2%', height: '25vh' }}>\r\n                                <Button variant=\"contained\" color=\"primary\"\r\n                                    onClick={() => setDrink('Custom')}\r\n                                    style={{ width: '100%', height: '100%' }}>\r\n                                    Custom Drink\r\n                            </Button>\r\n                            </Grid>\r\n                            {Object.keys(drinksDict).sort().map(drink => <DrinkButton drinkName={drink} setDrink={setDrink} />)}\r\n                        </>\r\n                        :\r\n                        Object.keys(drinksDict).sort().filter(drink => filterDrink(drink, search, filterIngredients, option)).map(drink => <DrinkButton drinkName={drink} setDrink={setDrink} />)\r\n                }\r\n            </Grid>\r\n        </div >\r\n    }\r\n}\r\n\r\nfunction filterDrink(drink, search, ingredients, option) {\r\n    console.log(ingredients)\r\n    var hasSearch = drink.includes(search.toLowerCase())\r\n    var hasIngredient = true\r\n    if (ingredients.length != 0) {\r\n        if (option == 'only') {\r\n            hasIngredient = ingredients.every(ingredient => Object.keys(drinksDict[drink]).includes(ingredient))\r\n        } else {\r\n            hasIngredient = ingredients.some(ingredient => Object.keys(drinksDict[drink]).includes(ingredient))\r\n        }\r\n    }\r\n    return hasSearch && hasIngredient\r\n}\r\n\r\nfunction capitalize(text) {\r\n    return text.toLowerCase()\r\n        .split(' ')\r\n        .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n        .join(' ');\r\n}\r\n\r\nfunction DrinkButton({ drinkName, setDrink }) {\r\n    return <Grid item xs={6} style={{ padding: '0.2%', height: '25vh' }}>\r\n        <Button variant=\"contained\" color=\"primary\"\r\n            onClick={() => setDrink(drinkName)}\r\n            style={{ width: '100%', height: '100%' }}>\r\n            <div>\r\n                <div>\r\n                    {drinkName}\r\n                </div>\r\n                <br />\r\n                <Box fontStyle='italic'>\r\n                    <Typography variant=\"caption\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        {\r\n                            Object.keys(drinksDict[drinkName]).map(drink => capitalize(drink)).join(', ')\r\n                        }\r\n                    </Typography>\r\n                </Box>\r\n            </div>\r\n        </Button>\r\n    </Grid>\r\n}"]},"metadata":{},"sourceType":"module"}