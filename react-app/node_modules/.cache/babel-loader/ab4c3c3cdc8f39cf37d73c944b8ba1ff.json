{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ben\\\\Documents\\\\GitHub\\\\Bartender\\\\react-app\\\\src\\\\ChooseDrinkScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField, Grid, Typography, Button, Box } from '@material-ui/core';\nimport drinksDict from './drinks.json';\nimport GetDrinkScreen from './GetDrinkScreen';\nexport default function ChooseDrinkScreen() {\n  _s();\n\n  const [drink, setDrink] = useState(null);\n  console.log(drinksDict);\n\n  if (drink != null) {\n    return /*#__PURE__*/_jsxDEV(GetDrinkScreen, {\n      drink: capitalize(drink),\n      qr: `g${drink}`,\n      allowFavorite: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100vw'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: Object.keys(drinksDict).map(drink => /*#__PURE__*/_jsxDEV(DrinkButton, {\n          drinkName: drink,\n          setDrink: setDrink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 55\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(ChooseDrinkScreen, \"xVLcbjAomI10AqjsBHz/zmLdBt8=\");\n\n_c = ChooseDrinkScreen;\n\nfunction capitalize(text) {\n  return text.toLowerCase().split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n}\n\nfunction DrinkButton({\n  drinkName,\n  setDrink\n}) {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      padding: '10px',\n      height: '25vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => setDrink(drinkName),\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      children: [drinkName, /*#__PURE__*/_jsxDEV(Box, {\n        fontStyle: \"italic\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: \"Ingredient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n}\n\n_c2 = DrinkButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChooseDrinkScreen\");\n$RefreshReg$(_c2, \"DrinkButton\");","map":{"version":3,"sources":["C:/Users/ben/Documents/GitHub/Bartender/react-app/src/ChooseDrinkScreen.js"],"names":["React","useState","TextField","Grid","Typography","Button","Box","drinksDict","GetDrinkScreen","ChooseDrinkScreen","drink","setDrink","console","log","capitalize","width","Object","keys","map","text","toLowerCase","split","s","charAt","toUpperCase","substring","join","DrinkButton","drinkName","padding","height","display","justifyContent","alignItems"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,UAA1B,EAAsCC,MAAtC,EAA8CC,GAA9C,QAAyD,mBAAzD;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;;AAGA,MAAIG,KAAK,IAAI,IAAb,EAAmB;AACf,wBAAO,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEI,UAAU,CAACJ,KAAD,CAAjC;AAA0C,MAAA,EAAE,EAAG,IAAGA,KAAM,EAAxD;AAA2D,MAAA,aAAa,EAAE;AAA1E;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO;AACH,wBAAO;AAAK,MAAA,KAAK,EAAE;AAAEK,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA,6BACH,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA,kBACKC,MAAM,CAACC,IAAP,CAAYV,UAAZ,EAAwBW,GAAxB,CAA4BR,KAAK,iBAAI,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEA,KAAxB;AAA+B,UAAA,QAAQ,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAArC;AADL;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AAKH;AACJ;;GAduBF,iB;;KAAAA,iB;;AAgBxB,SAASK,UAAT,CAAoBK,IAApB,EAA0B;AACtB,SAAOA,IAAI,CAACC,WAAL,GACFC,KADE,CACI,GADJ,EAEFH,GAFE,CAEGI,CAAD,IAAOA,CAAC,CAACC,MAAF,CAAS,CAAT,EAAYC,WAAZ,KAA4BF,CAAC,CAACG,SAAF,CAAY,CAAZ,CAFrC,EAGFC,IAHE,CAGG,GAHH,CAAP;AAIH;;AAED,SAASC,WAAT,CAAqB;AAAEC,EAAAA,SAAF;AAAajB,EAAAA;AAAb,CAArB,EAA8C;AAC1C,sBAAO,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,KAAK,EAAE;AAAEkB,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,MAAM,EAAE;AAA3B,KAAzB;AAAA,2BACH,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AACI,MAAA,OAAO,EAAE,MAAMnB,QAAQ,CAACiB,SAAD,CAD3B;AAEI,MAAA,KAAK,EAAE;AAAEb,QAAAA,KAAK,EAAE,MAAT;AAAiBe,QAAAA,MAAM,EAAE;AAAzB,OAFX;AAAA,iBAGKF,SAHL,eAII,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,SAApB;AAA8B,UAAA,KAAK,EAAE;AAAEG,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,cAAc,EAAE,QAAnC;AAA6CC,YAAAA,UAAU,EAAE;AAAzD,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAaH;;MAdQN,W","sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Grid, Typography, Button, Box } from '@material-ui/core';\r\nimport drinksDict from './drinks.json'\r\nimport GetDrinkScreen from './GetDrinkScreen'\r\n\r\nexport default function ChooseDrinkScreen() {\r\n    const [drink, setDrink] = useState(null);\r\n    console.log(drinksDict)\r\n\r\n\r\n    if (drink != null) {\r\n        return <GetDrinkScreen drink={capitalize(drink)} qr={`g${drink}`} allowFavorite={true} />\r\n    } else {\r\n        return <div style={{ width: '100vw' }}>\r\n            <Grid container>\r\n                {Object.keys(drinksDict).map(drink => <DrinkButton drinkName={drink} setDrink={setDrink} />)}\r\n            </Grid>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction capitalize(text) {\r\n    return text.toLowerCase()\r\n        .split(' ')\r\n        .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n        .join(' ');\r\n}\r\n\r\nfunction DrinkButton({ drinkName, setDrink }) {\r\n    return <Grid item xs={6} style={{ padding: '10px', height: '25vh' }}>\r\n        <Button variant=\"contained\" color=\"primary\"\r\n            onClick={() => setDrink(drinkName)}\r\n            style={{ width: '100%', height: '100%' }}>\r\n            {drinkName}\r\n            <Box fontStyle='italic'>\r\n                <Typography variant=\"caption\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    Ingredient\r\n                </Typography>\r\n            </Box>\r\n\r\n        </Button>\r\n    </Grid>\r\n}"]},"metadata":{},"sourceType":"module"}