{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ben\\\\Documents\\\\GitHub\\\\Bartender\\\\react-app\\\\src\\\\ConfigureScreen.js\";\nimport React, { useState } from 'react';\nimport { Slider, Grid, Select, InputLabel, Typography, FormControl, MenuItem, FormHelperText, Paper, TextField } from '@material-ui/core';\nimport ingredients from './ingredients.json';\ningredients.unshift('None');\n\nfunction capitalize(text) {\n  return text.toLowerCase().split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n}\n\nclass ConfigureScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    for (var i = 0; i < 8; i++) {\n      this.state[`ingredient${i}`] = 'None';\n    }\n\n    this.ingredients = ingredients.sort();\n  }\n\n  handleChange(key, val) {\n    this.setState({\n      [key]: val\n    });\n  }\n\n  render() {\n    var QRCode = require('qrcode.react');\n\n    const handleChange = this.handleChange.bind(this);\n    var qr = '';\n\n    for (var i = 0; i < 8; i++) {\n      qr += this.state['ingredient' + i] + '|';\n    }\n\n    qr = qr.substring(0, qr.length - 1);\n    console.log(qr);\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      children: [[...Array(8).keys()].map(index => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            style: {\n              minWidth: '75%'\n            },\n            name: `ingredient${index}`,\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: this.state[`ingredient${index}`],\n            onChange: event => handleChange(event.target.name, event.target.value),\n            children: this.ingredients.map(ingredient => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: ingredient,\n                children: capitalize(ingredient)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 44\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: [\"Pump \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(QRCode, {\n        value: `i${qr}`,\n        style: {\n          width: '90vw',\n          height: '90vw',\n          margin: '25px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default ConfigureScreen;","map":{"version":3,"sources":["C:/Users/ben/Documents/GitHub/Bartender/react-app/src/ConfigureScreen.js"],"names":["React","useState","Slider","Grid","Select","InputLabel","Typography","FormControl","MenuItem","FormHelperText","Paper","TextField","ingredients","unshift","capitalize","text","toLowerCase","split","map","s","charAt","toUpperCase","substring","join","ConfigureScreen","Component","constructor","props","state","i","sort","handleChange","key","val","setState","render","QRCode","require","bind","qr","length","console","log","Array","keys","index","padding","display","justifyContent","alignItems","minWidth","event","target","name","value","ingredient","width","height","margin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Slider, Grid, Select, InputLabel, Typography, FormControl, MenuItem, FormHelperText, Paper, TextField } from '@material-ui/core';\r\nimport ingredients from './ingredients.json'\r\n\r\ningredients.unshift('None')\r\n\r\nfunction capitalize(text) {\r\n    return text.toLowerCase()\r\n        .split(' ')\r\n        .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n        .join(' ');\r\n}\r\n\r\nclass ConfigureScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n        for (var i = 0; i < 8; i++) {\r\n            this.state[`ingredient${i}`] = 'None'\r\n        }\r\n\r\n        this.ingredients = ingredients.sort()\r\n    }\r\n\r\n    handleChange(key, val) {\r\n        this.setState({\r\n            [key]: val\r\n        })\r\n    }\r\n\r\n    render() {\r\n        var QRCode = require('qrcode.react')\r\n        const handleChange = this.handleChange.bind(this);\r\n\r\n        var qr = ''\r\n        for (var i = 0; i < 8; i++) {\r\n            qr += this.state['ingredient' + i] + '|'\r\n        }\r\n        qr = qr.substring(0, qr.length - 1)\r\n\r\n        console.log(qr)\r\n\r\n        return <Grid container justify=\"center\">\r\n            {\r\n                [...Array(8).keys()].map(index =>\r\n                    <Grid item xs={12} style={{ padding: '10px' }}>\r\n                        <FormControl style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                            <Select\r\n                                style={{ minWidth: '75%' }}\r\n                                name={`ingredient${index}`}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={this.state[`ingredient${index}`]}\r\n                                onChange={(event) => handleChange(event.target.name, event.target.value)}\r\n                            >\r\n                                {this.ingredients.map((ingredient) => {\r\n                                    return <MenuItem value={ingredient}>{capitalize(ingredient)}</MenuItem>\r\n                                })}\r\n                            </ Select>\r\n                            <FormHelperText>Pump {index + 1}</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>)\r\n            }\r\n\r\n            <QRCode value={`i${qr}`} style={{ width: '90vw', height: '90vw', margin:'25px' }} />\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport default ConfigureScreen"]},"metadata":{},"sourceType":"module"}