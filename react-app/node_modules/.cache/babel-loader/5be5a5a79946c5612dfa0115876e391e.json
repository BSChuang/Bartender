{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import _objectSpread from\"C:/Users/ben/Documents/GitHub/Bartender/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"C:/Users/ben/Documents/GitHub/Bartender/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{TextField,Grid,Typography,Button,Box,FormControl,FormLabel,RadioGroup,Radio,FormControlLabel}from'@material-ui/core';import Autocomplete from'@material-ui/lab/Autocomplete';import drinksDict from'./drinks.json';import ingredients from'./ingredients.json';import GetDrinkScreen,{GetCustomDrinkScreen}from'./GetDrinkScreen';export default function ChooseDrinkScreen(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),drink=_useState2[0],setDrink=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];var handleSearchChange=function handleSearchChange(e){setSearch(e.target.value);};var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),filterIngredients=_useState6[0],setFilterIngredients=_useState6[1];var handleIngredientChange=function handleIngredientChange(e,value){setFilterIngredients(value);};var _useState7=useState('every'),_useState8=_slicedToArray(_useState7,2),option=_useState8[0],setOption=_useState8[1];var handleOptionChange=function handleOptionChange(e,value){setOption(value);};if(drink==='Custom'){return/*#__PURE__*/_jsx(GetCustomDrinkScreen,{});}else if(drink!=null){return/*#__PURE__*/_jsx(GetDrinkScreen,{drink:capitalize(drink),qr:\"g\".concat(drink),allowFavorite:true});}else{return/*#__PURE__*/_jsxs(\"div\",{style:{width:'100vw'},children:[/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(TextField,{id:\"standard-basic\",label:\"Search\",onChange:handleSearchChange,style:{width:'95%'}})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(Autocomplete,{multiple:true,id:\"tags-standard\",options:ingredients.slice(1),getOptionLabel:function getOptionLabel(option){return capitalize(option);},defaultValue:[],onChange:handleIngredientChange,style:{width:'95%'},renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{variant:\"standard\",label:\"Ingredients\"}));}})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(FormControl,{component:\"fieldset\",children:/*#__PURE__*/_jsxs(RadioGroup,{row:true,\"aria-label\":\"position\",name:\"position\",defaultValue:\"every\",style:{display:'flex'},onChange:handleOptionChange,children:[/*#__PURE__*/_jsx(FormControlLabel,{value:\"every\",control:/*#__PURE__*/_jsx(Radio,{color:\"primary\"}),label:\"Every\",labelPlacement:\"start\"}),/*#__PURE__*/_jsx(FormControlLabel,{value:\"some\",control:/*#__PURE__*/_jsx(Radio,{color:\"primary\"}),label:\"Some\",labelPlacement:\"start\"})]})})})})]}),/*#__PURE__*/_jsx(Grid,{container:true,children:search==''&&filterIngredients.length==0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,style:{padding:'0.2%',height:'25vh'},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:function onClick(){return setDrink('Custom');},style:{width:'100%',height:'100%'},children:\"Custom Drink\"})}),Object.keys(drinksDict).sort().map(function(drink){return/*#__PURE__*/_jsx(DrinkButton,{drinkName:drink,setDrink:setDrink});})]}):Object.keys(drinksDict).sort().filter(function(drink){return filterDrink(drink,search,filterIngredients,option);}).map(function(drink){return/*#__PURE__*/_jsx(DrinkButton,{drinkName:drink,setDrink:setDrink});})})]});}}function filterDrink(drink,search,ingredients,option){var hasSearch=drink.includes(search.toLowerCase());var hasIngredient=true;if(ingredients.length!=0){if(option=='only'){hasIngredient=ingredients.every(function(ingredient){return Object.keys(drinksDict[drink]).includes(ingredient);});}else{hasIngredient=ingredients.some(function(ingredient){return Object.keys(drinksDict[drink]).includes(ingredient);});}}return hasSearch&&hasIngredient;}function capitalize(text){return text.toLowerCase().split(' ').map(function(s){return s.charAt(0).toUpperCase()+s.substring(1);}).join(' ');}function DrinkButton(_ref){var drinkName=_ref.drinkName,setDrink=_ref.setDrink;return/*#__PURE__*/_jsx(Grid,{item:true,xs:6,style:{padding:'0.2%',height:'25vh'},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:function onClick(){return setDrink(drinkName);},style:{width:'100%',height:'100%'},children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",style:{display:'flex',justifyContent:'center',alignItems:'center'},children:drinkName})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Box,{fontStyle:\"oblique\",children:/*#__PURE__*/_jsx(Typography,{variant:\"caption\",style:{display:'flex',justifyContent:'center',alignItems:'center'},children:Object.keys(drinksDict[drinkName]).map(function(drink){return capitalize(drink);}).join(', ')})})]})})});}","map":{"version":3,"sources":["C:/Users/ben/Documents/GitHub/Bartender/react-app/src/ChooseDrinkScreen.js"],"names":["React","useState","TextField","Grid","Typography","Button","Box","FormControl","FormLabel","RadioGroup","Radio","FormControlLabel","Autocomplete","drinksDict","ingredients","GetDrinkScreen","GetCustomDrinkScreen","ChooseDrinkScreen","drink","setDrink","search","setSearch","handleSearchChange","e","target","value","filterIngredients","setFilterIngredients","handleIngredientChange","option","setOption","handleOptionChange","capitalize","width","display","justifyContent","alignItems","slice","params","length","padding","height","Object","keys","sort","map","filter","filterDrink","hasSearch","includes","toLowerCase","hasIngredient","every","ingredient","some","text","split","s","charAt","toUpperCase","substring","join","DrinkButton","drinkName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Grid, Typography, Button, Box, FormControl, FormLabel, RadioGroup, Radio, FormControlLabel } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport drinksDict from './drinks.json'\r\nimport ingredients from './ingredients.json'\r\nimport GetDrinkScreen, { GetCustomDrinkScreen } from './GetDrinkScreen'\r\n\r\nexport default function ChooseDrinkScreen() {\r\n    const [drink, setDrink] = useState(null);\r\n\r\n    const [search, setSearch] = useState('')\r\n    const handleSearchChange = (e) => {\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    const [filterIngredients, setFilterIngredients] = useState([])\r\n    const handleIngredientChange = (e, value) => {\r\n        setFilterIngredients(value)\r\n    }\r\n\r\n    const [option, setOption] = useState('every')\r\n    const handleOptionChange = (e, value) => {\r\n        setOption(value)\r\n    }\r\n\r\n    if (drink === 'Custom') {\r\n        return <GetCustomDrinkScreen />\r\n    } else if (drink != null) {\r\n        return <GetDrinkScreen drink={capitalize(drink)} qr={`g${drink}`} allowFavorite={true} />\r\n    }\r\n    else {\r\n        return <div style={{ width: '100vw' }}>\r\n            <Grid\r\n                container\r\n                direction=\"row\">\r\n                <Grid item xs={12}>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <TextField id=\"standard-basic\" label=\"Search\" onChange={handleSearchChange}\r\n                            style={{ width: '95%' }} />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Autocomplete\r\n                            multiple\r\n                            id=\"tags-standard\"\r\n                            options={ingredients.slice(1)}\r\n                            getOptionLabel={(option) => capitalize(option)}\r\n                            defaultValue={[]}\r\n                            onChange={handleIngredientChange}\r\n                            style={{ width: '95%' }}\r\n                            renderInput={(params) => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    variant=\"standard\"\r\n                                    label=\"Ingredients\"\r\n\r\n                                />\r\n                            )}\r\n                        />\r\n                    </ div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <FormControl component=\"fieldset\">\r\n                            <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"every\" style={{ display: 'flex' }} onChange={handleOptionChange}>\r\n                                <FormControlLabel\r\n                                    value=\"every\"\r\n                                    control={<Radio color=\"primary\" />}\r\n                                    label=\"Every\"\r\n                                    labelPlacement=\"start\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    value=\"some\"\r\n                                    control={<Radio color=\"primary\" />}\r\n                                    label=\"Some\"\r\n                                    labelPlacement=\"start\"\r\n                                />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                {\r\n                    search == '' && filterIngredients.length == 0 ?\r\n                        <>\r\n                            <Grid item xs={6} style={{ padding: '0.2%', height: '25vh' }}>\r\n                                <Button variant=\"contained\" color=\"primary\"\r\n                                    onClick={() => setDrink('Custom')}\r\n                                    style={{ width: '100%', height: '100%' }}>\r\n                                    Custom Drink\r\n                            </Button>\r\n                            </Grid>\r\n                            {Object.keys(drinksDict).sort().map(drink => <DrinkButton drinkName={drink} setDrink={setDrink} />)}\r\n                        </>\r\n                        :\r\n                        Object.keys(drinksDict).sort().filter(drink => filterDrink(drink, search, filterIngredients, option)).map(drink => <DrinkButton drinkName={drink} setDrink={setDrink} />)\r\n                }\r\n            </Grid>\r\n        </div >\r\n    }\r\n}\r\n\r\nfunction filterDrink(drink, search, ingredients, option) {\r\n    var hasSearch = drink.includes(search.toLowerCase())\r\n    var hasIngredient = true\r\n    if (ingredients.length != 0) {\r\n        if (option == 'only') {\r\n            hasIngredient = ingredients.every(ingredient => Object.keys(drinksDict[drink]).includes(ingredient))\r\n        } else {\r\n            hasIngredient = ingredients.some(ingredient => Object.keys(drinksDict[drink]).includes(ingredient))\r\n        }\r\n    }\r\n    return hasSearch && hasIngredient\r\n}\r\n\r\nfunction capitalize(text) {\r\n    return text.toLowerCase()\r\n        .split(' ')\r\n        .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n        .join(' ');\r\n}\r\n\r\nfunction DrinkButton({ drinkName, setDrink }) {\r\n    return <Grid item xs={6} style={{ padding: '0.2%', height: '25vh' }}>\r\n        <Button variant=\"contained\" color=\"primary\"\r\n            onClick={() => setDrink(drinkName)}\r\n            style={{ width: '100%', height: '100%' }}>\r\n            <div>\r\n                <div>\r\n                    <Typography variant=\"h5\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        {drinkName}\r\n                    </Typography>\r\n\r\n                </div>\r\n                <br />\r\n                <Box fontStyle='oblique'>\r\n                    <Typography variant=\"caption\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        {\r\n                            Object.keys(drinksDict[drinkName]).map(drink => capitalize(drink)).join(', ')\r\n                        }\r\n                    </Typography>\r\n                </Box>\r\n            </div>\r\n        </Button>\r\n    </Grid>\r\n}"]},"metadata":{},"sourceType":"module"}