{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ben\\\\Documents\\\\GitHub\\\\Bartender\\\\react-app\\\\src\\\\ConfigureScreen.js\";\nimport React, { useState } from 'react';\nimport { Slider, Grid, Select, InputLabel, Typography, FormControl, MenuItem, Button, Paper, TextField } from '@material-ui/core';\nimport ingredients from './ingredients.json';\ningredients.unshift('None');\n\nfunction capitalize(text) {\n  return text.toLowerCase().split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n}\n\nclass ConfigureScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'ingredient0': 'None',\n      'ingredient1': 'None',\n      'ingredient2': 'None',\n      'ingredient3': 'None',\n      'ingredient4': 'None',\n      'ingredient5': 'None'\n    };\n    this.ingredients = ingredients.sort();\n  }\n\n  handleChange(key, val) {\n    this.setState({\n      [key]: val\n    });\n  }\n\n  render() {\n    var QRCode = require('qrcode.react');\n\n    const handleChange = this.handleChange.bind(this);\n    const boundAdd = this.addIngredient.bind(this);\n    const boundRemove = this.removeIngredient.bind(this);\n    var qr = this.state.name;\n\n    for (var i = 0; i < this.state.ingredients; i++) {\n      qr += '|' + this.state['ingredient' + i] + ':' + this.state['quantity' + i];\n    }\n\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      children: [...Array(7)].map(index => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          style: {\n            minWidth: '10%'\n          },\n          name: `ingredient${index}`,\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          value: this.state[`ingredient${index}`],\n          onChange: event => handleChange(event.target.name, event.target.value),\n          autoWidth: true,\n          min: true,\n          children: this.ingredients.map(ingredient => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: ingredient,\n              children: capitalize(ingredient)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: \"Craft your own!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"standard-basic\",\n                label: \"Drink name\",\n                onChange: event => handleChange('name', event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), [...Array(this.state.ingredients).keys()].map(index => {\n        return this.makeIngredient(index, handleChange);\n      }), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        align: \"center\",\n        style: {\n          padding: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            width: '25%',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          onClick: boundAdd,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        align: \"center\",\n        style: {\n          padding: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            width: '25%'\n          },\n          onClick: boundRemove,\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(QRCode, {\n        value: qr,\n        style: {\n          width: '95vw',\n          height: '95vw'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default ConfigureScreen;","map":{"version":3,"sources":["C:/Users/ben/Documents/GitHub/Bartender/react-app/src/ConfigureScreen.js"],"names":["React","useState","Slider","Grid","Select","InputLabel","Typography","FormControl","MenuItem","Button","Paper","TextField","ingredients","unshift","capitalize","text","toLowerCase","split","map","s","charAt","toUpperCase","substring","join","ConfigureScreen","Component","constructor","props","state","sort","handleChange","key","val","setState","render","QRCode","require","bind","boundAdd","addIngredient","boundRemove","removeIngredient","qr","name","i","Array","index","padding","minWidth","event","target","value","ingredient","display","justifyContent","alignItems","keys","makeIngredient","width","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Slider, Grid, Select, InputLabel, Typography, FormControl, MenuItem, Button, Paper, TextField } from '@material-ui/core';\r\nimport ingredients from './ingredients.json'\r\n\r\ningredients.unshift('None')\r\n\r\nfunction capitalize(text) {\r\n    return text.toLowerCase()\r\n        .split(' ')\r\n        .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n        .join(' ');\r\n}\r\n\r\nclass ConfigureScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'ingredient0': 'None',\r\n            'ingredient1': 'None',\r\n            'ingredient2': 'None',\r\n            'ingredient3': 'None',\r\n            'ingredient4': 'None',\r\n            'ingredient5': 'None',\r\n        }\r\n\r\n        this.ingredients = ingredients.sort()\r\n    }\r\n\r\n    handleChange(key, val) {\r\n        this.setState({\r\n            [key]: val\r\n        })\r\n    }\r\n\r\n    render() {\r\n        var QRCode = require('qrcode.react')\r\n        const handleChange = this.handleChange.bind(this);\r\n        const boundAdd = this.addIngredient.bind(this);\r\n        const boundRemove = this.removeIngredient.bind(this);\r\n\r\n        var qr = this.state.name\r\n        for (var i = 0; i < this.state.ingredients; i++) {\r\n            qr += '|' + this.state['ingredient' + i] + ':' + this.state['quantity' + i]\r\n        }\r\n\r\n        return <Grid container justify=\"center\">\r\n            {\r\n                [...Array(7)].map(index =>\r\n                    <Grid item xs={12} style={{ padding: '10px' }}>\r\n                        <Select\r\n                            style={{ minWidth: '10%' }}\r\n                            name={`ingredient${index}`}\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={this.state[`ingredient${index}`]}\r\n                            onChange={(event) => handleChange(event.target.name, event.target.value)}\r\n                            autoWidth\r\n                            min\r\n                        >\r\n                            {this.ingredients.map((ingredient) => {\r\n                                return <MenuItem value={ingredient}>{capitalize(ingredient)}</MenuItem>\r\n                            })}\r\n                        </ Select>\r\n                    </Grid>)\r\n            }\r\n        </Grid>\r\n\r\n        return <Grid container\r\n            justify=\"center\"\r\n        >\r\n            <Grid item xs={12} style={{ padding: '10px' }}>\r\n                <Paper elevation={3} >\r\n                    <Typography variant=\"h6\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        Craft your own!\r\n                    </Typography>\r\n\r\n                    <div style={{ padding: '10px' }}>\r\n                        <FormControl style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                            <TextField\r\n                                id=\"standard-basic\"\r\n                                label=\"Drink name\"\r\n                                onChange={(event) => handleChange('name', event.target.value)}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                </Paper>\r\n            </Grid>\r\n\r\n            {[...Array(this.state.ingredients).keys()].map(index => {\r\n                return this.makeIngredient(index, handleChange)\r\n            })}\r\n\r\n            <Grid item xs={6} align='center' style={{ padding: '10px' }}>\r\n                <Button variant=\"contained\" color=\"primary\"\r\n                    style={{ width: '25%', justifyContent: 'center', alignItems: 'center' }}\r\n                    onClick={boundAdd}>\r\n                    Add\r\n                </Button>\r\n            </ Grid>\r\n            <Grid item xs={6} align='center' style={{ padding: '10px', }}>\r\n                <Button variant=\"contained\" color=\"primary\"\r\n                    style={{ width: '25%' }}\r\n                    onClick={boundRemove}>\r\n                    Remove\r\n                </Button>\r\n            </ Grid>\r\n\r\n            <QRCode value={qr} style={{ width: '95vw', height: '95vw' }} />\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport default ConfigureScreen"]},"metadata":{},"sourceType":"module"}