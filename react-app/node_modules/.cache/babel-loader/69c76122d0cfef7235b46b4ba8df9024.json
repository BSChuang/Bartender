{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ben\\\\Documents\\\\GitHub\\\\Bartender\\\\react-app\\\\src\\\\ChooseDrinkScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField, Grid, Typography, Button, Box, FormControl, FormLabel, RadioGroup, Radio, FormControlLabel } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport drinksDict from './drinks.json';\nimport ingredients from './ingredients.json';\nimport GetDrinkScreen, { GetCustomDrinkScreen } from './GetDrinkScreen';\nexport default function ChooseDrinkScreen() {\n  _s();\n\n  const [drink, setDrink] = useState(null);\n  const [search, setSearch] = useState('');\n\n  const handleSearchChange = e => {\n    setSearch(e.target.value);\n  };\n\n  const [filterIngredients, setFilterIngredients] = useState('');\n\n  const handleIngredientChange = (e, value) => {\n    setFilterIngredients(value);\n  };\n\n  if (drink === 'Custom') {\n    return /*#__PURE__*/_jsxDEV(GetCustomDrinkScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  } else if (drink != null) {\n    return /*#__PURE__*/_jsxDEV(GetDrinkScreen, {\n      drink: capitalize(drink),\n      qr: `g${drink}`,\n      allowFavorite: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100vw'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        label: \"Search\",\n        onChange: handleSearchChange,\n        style: {\n          width: '95vw',\n          paddingBottom: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          row: true,\n          \"aria-label\": \"position\",\n          name: \"position\",\n          defaultValue: \"top\",\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"start\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 34\n            }, this),\n            label: \"Start\",\n            labelPlacement: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"start\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 34\n            }, this),\n            label: \"Start\",\n            labelPlacement: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        multiple: true,\n        id: \"tags-standard\",\n        options: ingredients.slice(1),\n        getOptionLabel: option => capitalize(option),\n        defaultValue: [],\n        onChange: handleIngredientChange,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          variant: \"standard\",\n          label: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: search == '' && filterIngredients.length == 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            style: {\n              padding: '10px',\n              height: '25vh'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => setDrink('Custom'),\n              style: {\n                width: '100%',\n                height: '100%'\n              },\n              children: \"Custom Drink\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), Object.keys(drinksDict).sort().map(drink => /*#__PURE__*/_jsxDEV(DrinkButton, {\n            drinkName: drink,\n            setDrink: setDrink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 74\n          }, this))]\n        }, void 0, true) : Object.keys(drinksDict).sort().filter(drink => filterDrink(drink, search, filterIngredients)).map(drink => /*#__PURE__*/_jsxDEV(DrinkButton, {\n          drinkName: drink,\n          setDrink: setDrink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 132\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(ChooseDrinkScreen, \"Q3RQvAlgtQHKOFZBUkEz/nFDUQ8=\");\n\n_c = ChooseDrinkScreen;\n\nfunction filterDrink(drink, search, ingredients) {\n  return drink.includes(search.toLowerCase()) && ingredients.every(ingredient => Object.keys(drinksDict[drink]).includes(ingredient));\n}\n\nfunction capitalize(text) {\n  return text.toLowerCase().split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n}\n\nfunction DrinkButton({\n  drinkName,\n  setDrink\n}) {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      padding: '10px',\n      height: '25vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => setDrink(drinkName),\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: drinkName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          fontStyle: \"italic\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: Object.keys(drinksDict[drinkName]).map(drink => capitalize(drink)).join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 12\n  }, this);\n}\n\n_c2 = DrinkButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChooseDrinkScreen\");\n$RefreshReg$(_c2, \"DrinkButton\");","map":{"version":3,"sources":["C:/Users/ben/Documents/GitHub/Bartender/react-app/src/ChooseDrinkScreen.js"],"names":["React","useState","TextField","Grid","Typography","Button","Box","FormControl","FormLabel","RadioGroup","Radio","FormControlLabel","Autocomplete","drinksDict","ingredients","GetDrinkScreen","GetCustomDrinkScreen","ChooseDrinkScreen","drink","setDrink","search","setSearch","handleSearchChange","e","target","value","filterIngredients","setFilterIngredients","handleIngredientChange","capitalize","width","paddingBottom","slice","option","params","length","padding","height","Object","keys","sort","map","filter","filterDrink","includes","toLowerCase","every","ingredient","text","split","s","charAt","toUpperCase","substring","join","DrinkButton","drinkName","display","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Grid, Typography, Button, Box, FormControl, FormLabel, RadioGroup, Radio, FormControlLabel } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport drinksDict from './drinks.json'\r\nimport ingredients from './ingredients.json'\r\nimport GetDrinkScreen, { GetCustomDrinkScreen } from './GetDrinkScreen'\r\n\r\nexport default function ChooseDrinkScreen() {\r\n    const [drink, setDrink] = useState(null);\r\n\r\n    const [search, setSearch] = useState('')\r\n    const handleSearchChange = (e) => {\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    const [filterIngredients, setFilterIngredients] = useState('')\r\n    const handleIngredientChange = (e, value) => {\r\n        setFilterIngredients(value)\r\n    }\r\n\r\n    if (drink === 'Custom') {\r\n        return <GetCustomDrinkScreen />\r\n    } else if (drink != null) {\r\n        return <GetDrinkScreen drink={capitalize(drink)} qr={`g${drink}`} allowFavorite={true} />\r\n    }\r\n    else {\r\n        return <div style={{ width: '100vw' }}>\r\n            <TextField id=\"standard-basic\" label=\"Search\" onChange={handleSearchChange}\r\n                style={{ width: '95vw', paddingBottom:'10px' }} />\r\n            <FormControl component=\"fieldset\">\r\n                <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\">\r\n                    <FormControlLabel\r\n                        value=\"start\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Start\"\r\n                        labelPlacement=\"start\"\r\n                    />\r\n                    <FormControlLabel\r\n                        value=\"start\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Start\"\r\n                        labelPlacement=\"start\"\r\n                    />\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <Autocomplete\r\n                multiple\r\n                id=\"tags-standard\"\r\n                options={ingredients.slice(1)}\r\n                getOptionLabel={(option) => capitalize(option)}\r\n                defaultValue={[]}\r\n                onChange={handleIngredientChange}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        variant=\"standard\"\r\n                        label=\"Ingredients\"\r\n                    />\r\n                )}\r\n            />\r\n            <Grid container>\r\n                {\r\n                    search == '' && filterIngredients.length == 0 ?\r\n                        <>\r\n                            <Grid item xs={6} style={{ padding: '10px', height: '25vh' }}>\r\n                                <Button variant=\"contained\" color=\"primary\"\r\n                                    onClick={() => setDrink('Custom')}\r\n                                    style={{ width: '100%', height: '100%' }}>\r\n                                    Custom Drink\r\n                            </Button>\r\n                            </Grid>\r\n                            {Object.keys(drinksDict).sort().map(drink => <DrinkButton drinkName={drink} setDrink={setDrink} />)}\r\n                        </>\r\n                        :\r\n                        Object.keys(drinksDict).sort().filter(drink => filterDrink(drink, search, filterIngredients)).map(drink => <DrinkButton drinkName={drink} setDrink={setDrink} />)\r\n                }\r\n            </Grid>\r\n        </div >\r\n    }\r\n}\r\n\r\nfunction filterDrink(drink, search, ingredients) {\r\n    return drink.includes(search.toLowerCase()) && ingredients.every(ingredient => Object.keys(drinksDict[drink]).includes(ingredient))\r\n}\r\n\r\nfunction capitalize(text) {\r\n    return text.toLowerCase()\r\n        .split(' ')\r\n        .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n        .join(' ');\r\n}\r\n\r\nfunction DrinkButton({ drinkName, setDrink }) {\r\n    return <Grid item xs={6} style={{ padding: '10px', height: '25vh' }}>\r\n        <Button variant=\"contained\" color=\"primary\"\r\n            onClick={() => setDrink(drinkName)}\r\n            style={{ width: '100%', height: '100%' }}>\r\n            <div>\r\n                <div>\r\n                    {drinkName}\r\n                </div>\r\n                <br />\r\n                <Box fontStyle='italic'>\r\n                    <Typography variant=\"caption\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        {\r\n                            Object.keys(drinksDict[drinkName]).map(drink => capitalize(drink)).join(', ')\r\n                        }\r\n                    </Typography>\r\n                </Box>\r\n            </div>\r\n        </Button>\r\n    </Grid>\r\n}"]},"metadata":{},"sourceType":"module"}