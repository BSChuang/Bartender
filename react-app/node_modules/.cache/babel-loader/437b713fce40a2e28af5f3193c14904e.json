{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ben\\\\Documents\\\\GitHub\\\\Bartender\\\\react-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Button, Grid, Toolbar, IconButton, Typography, AppBar } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport HomeScreen from './HomeScreen';\nimport NewUserScreen from './NewUserScreen';\n\nfunction App() {\n  _s();\n\n  const [screen, setScreen] = useState('home');\n\n  var QRCode = require('qrcode.react');\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      setScreen: setScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), chooseScreen(screen, setScreen)]\n  }, void 0, true);\n}\n\n_s(App, \"Dma3ctYByppVrvnZ54+5SYt9WUw=\");\n\n_c = App;\n\nfunction chooseScreen(screen, setScreen) {\n  switch (screen) {\n    case 'home':\n      return /*#__PURE__*/_jsxDEV(HomeScreen, {\n        setScreen: setScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n\n    case 'new':\n      return /*#__PURE__*/_jsxDEV(NewUserScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n\n    default:\n      return;\n  }\n}\n\nfunction TopBar({\n  setScreen\n}) {\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          onClick: () => setScreen('home'),\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: \"QRtender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = TopBar;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"TopBar\");","map":{"version":3,"sources":["C:/Users/ben/Documents/GitHub/Bartender/react-app/src/App.js"],"names":["React","useState","Button","Grid","Toolbar","IconButton","Typography","AppBar","MenuIcon","ArrowBackIcon","HomeScreen","NewUserScreen","App","screen","setScreen","QRCode","require","chooseScreen","TopBar","display","justifyContent","alignItems"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCC,UAAhC,EAA4CC,UAA5C,EAAwDC,MAAxD,QAAsE,mBAAtE;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,MAAD,CAApC;;AACA,MAAIc,MAAM,GAAGC,OAAO,CAAC,cAAD,CAApB;;AACA,sBACE;AAAA,4BAEE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGG,YAAY,CAACJ,MAAD,EAASC,SAAT,CAHf;AAAA,kBADF;AAOD;;GAVQF,G;;KAAAA,G;;AAYT,SAASK,YAAT,CAAsBJ,MAAtB,EAA8BC,SAA9B,EAAyC;AACvC,UAAOD,MAAP;AACE,SAAK,MAAL;AACE,0BAAO,QAAC,UAAD;AAAY,QAAA,SAAS,EAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,SAAK,KAAL;AACE,0BAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF;AACE;AANJ;AAQD;;AAED,SAASI,MAAT,CAAgB;AAACJ,EAAAA;AAAD,CAAhB,EAA6B;AAC3B,sBAAO,QAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAAA,2BACL,QAAC,OAAD;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,OAAO,EAAC,eAHV;AAIE,QAAA,UAAU,EAAC,QAJb;AAAA,gCAME,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,OAAjB;AAAyB,UAAA,KAAK,EAAC,SAA/B;AAAyC,wBAAW,MAApD;AAA2D,UAAA,OAAO,EAAE,MAAMA,SAAS,CAAC,MAAD,CAAnF;AAAA,iCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eASE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,KAAK,EAAE;AAAEK,cAAAA,OAAO,EAAE,MAAX;AAAmBC,cAAAA,cAAc,EAAE,QAAnC;AAA6CC,cAAAA,UAAU,EAAE;AAAzD,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF,eAcE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,OAAjB;AAAyB,UAAA,KAAK,EAAC,SAA/B;AAAyC,wBAAW,MAApD;AAAA,iCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,UAAP;AAwBD;;MAzBQH,M;AA2BT,eAAeN,GAAf","sourcesContent":["\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Button, Grid, Toolbar, IconButton, Typography, AppBar } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport HomeScreen from './HomeScreen'\nimport NewUserScreen from './NewUserScreen'\n\nfunction App() {\n  const [screen, setScreen] = useState('home');\n  var QRCode = require('qrcode.react')\n  return (\n    <>\n      {/* <QRCode value=\"http://facebook.github.io/react/\" /> */}\n      <TopBar setScreen={setScreen} />\n      {chooseScreen(screen, setScreen)}\n    </>\n  );\n}\n\nfunction chooseScreen(screen, setScreen) {\n  switch(screen) {\n    case 'home':\n      return <HomeScreen setScreen={setScreen} />\n    case 'new':\n      return <NewUserScreen />\n    default:\n      return\n  }\n}\n\nfunction TopBar({setScreen}) {\n  return <AppBar position=\"static\">\n    <Toolbar>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={() => setScreen('home')}>\n          <ArrowBackIcon />\n        </IconButton>\n        <Grid item xs={4}>\n          <Typography variant=\"h6\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            QRtender\n          </Typography>\n        </Grid>\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n          <MenuIcon />\n        </IconButton>\n      </ Grid>\n\n\n    </Toolbar>\n  </AppBar>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}