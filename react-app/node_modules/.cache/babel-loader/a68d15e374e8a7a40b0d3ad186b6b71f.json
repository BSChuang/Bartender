{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ben\\\\Documents\\\\GitHub\\\\Bartender\\\\react-app\\\\src\\\\ChooseDrinkScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField, Grid, Typography, Button, Box } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport drinksDict from './drinks.json';\nimport GetDrinkScreen, { GetCustomDrinkScreen } from './GetDrinkScreen';\nexport default function ChooseDrinkScreen() {\n  _s();\n\n  const [drink, setDrink] = useState(null);\n\n  if (drink === 'Custom') {\n    return /*#__PURE__*/_jsxDEV(GetCustomDrinkScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  } else if (drink != null) {\n    return /*#__PURE__*/_jsxDEV(GetDrinkScreen, {\n      drink: capitalize(drink),\n      qr: `g${drink}`,\n      allowFavorite: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100vw'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        multiple: true,\n        id: \"tags-standard\",\n        options: Object.keys(drinksDict),\n        getOptionLabel: option => option,\n        defaultValue: [],\n        freeSolo: true,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          variant: \"standard\",\n          label: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          style: {\n            padding: '10px',\n            height: '25vh'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => setDrink('Custom'),\n            style: {\n              width: '100%',\n              height: '100%'\n            },\n            children: \"Custom Drink\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), Object.keys(drinksDict).map(drink => /*#__PURE__*/_jsxDEV(DrinkButton, {\n          drinkName: drink,\n          setDrink: setDrink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 55\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(ChooseDrinkScreen, \"xVLcbjAomI10AqjsBHz/zmLdBt8=\");\n\n_c = ChooseDrinkScreen;\n\nfunction capitalize(text) {\n  return text.toLowerCase().split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n}\n\nfunction DrinkButton({\n  drinkName,\n  setDrink\n}) {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      padding: '10px',\n      height: '25vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => setDrink(drinkName),\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: drinkName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          fontStyle: \"italic\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: Object.keys(drinksDict[drinkName]).map(drink => capitalize(drink)).join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n}\n\n_c2 = DrinkButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChooseDrinkScreen\");\n$RefreshReg$(_c2, \"DrinkButton\");","map":{"version":3,"sources":["C:/Users/ben/Documents/GitHub/Bartender/react-app/src/ChooseDrinkScreen.js"],"names":["React","useState","TextField","Grid","Typography","Button","Box","Autocomplete","drinksDict","GetDrinkScreen","GetCustomDrinkScreen","ChooseDrinkScreen","drink","setDrink","capitalize","width","Object","keys","option","params","padding","height","map","text","toLowerCase","split","s","charAt","toUpperCase","substring","join","DrinkButton","drinkName","display","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Grid, Typography, Button, Box } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport drinksDict from './drinks.json'\r\nimport GetDrinkScreen, { GetCustomDrinkScreen } from './GetDrinkScreen'\r\n\r\nexport default function ChooseDrinkScreen() {\r\n    const [drink, setDrink] = useState(null);\r\n\r\n    if (drink === 'Custom') {\r\n        return <GetCustomDrinkScreen />\r\n    } else if (drink != null) {\r\n        return <GetDrinkScreen drink={capitalize(drink)} qr={`g${drink}`} allowFavorite={true} />\r\n    }\r\n    else {\r\n        return <div style={{ width: '100vw' }}>\r\n            <Autocomplete\r\n                multiple\r\n                id=\"tags-standard\"\r\n                options={Object.keys(drinksDict)}\r\n                getOptionLabel={(option) => option}\r\n                defaultValue={[]}\r\n                freeSolo\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        variant=\"standard\"\r\n                        label=\"Ingredients\"\r\n                    />\r\n                )}\r\n            />\r\n            <Grid container>\r\n                <Grid item xs={6} style={{ padding: '10px', height: '25vh' }}>\r\n                    <Button variant=\"contained\" color=\"primary\"\r\n                        onClick={() => setDrink('Custom')}\r\n                        style={{ width: '100%', height: '100%' }}>\r\n                        Custom Drink\r\n                    </Button>\r\n                </Grid>\r\n                {Object.keys(drinksDict).map(drink => <DrinkButton drinkName={drink} setDrink={setDrink} />)}\r\n            </Grid>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction capitalize(text) {\r\n    return text.toLowerCase()\r\n        .split(' ')\r\n        .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n        .join(' ');\r\n}\r\n\r\nfunction DrinkButton({ drinkName, setDrink }) {\r\n    return <Grid item xs={6} style={{ padding: '10px', height: '25vh' }}>\r\n        <Button variant=\"contained\" color=\"primary\"\r\n            onClick={() => setDrink(drinkName)}\r\n            style={{ width: '100%', height: '100%' }}>\r\n            <div>\r\n                <div>\r\n                    {drinkName}\r\n                </div>\r\n                <br />\r\n                <Box fontStyle='italic'>\r\n                    <Typography variant=\"caption\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        {\r\n                            Object.keys(drinksDict[drinkName]).map(drink => capitalize(drink)).join(', ')\r\n                        }\r\n                    </Typography>\r\n                </Box>\r\n            </div>\r\n        </Button>\r\n    </Grid>\r\n}"]},"metadata":{},"sourceType":"module"}